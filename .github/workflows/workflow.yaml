name: docs-workflow

on:
  push:
  pull_request:
    types: [opened,synchronize]

jobs: 

  setup:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "event name is:" ${{ github.event_name }} 
      - run: echo "event action is:" ${{ github.event.action }}
      - run: echo "github branch head is:" ${{ github.event.ref }}
      - run: echo "github branch is:" ${{ github.ref_name }}
      - run: echo "is merge :" ${{github.event.pull_request.merged == true}}
      - run: echo "pull_req value $PRCTX" 
        env:
          PRCTX: ${{ toJson(github.event.pull_request) }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "is open or sync : ${{ contains(fromJson('["opened", "synchronize"]'), github.event.action)  }}"
          echo "is pr : ${{ github.event_name == 'pull_request' }}"
          echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Show default environment variables
        run: |
          echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
          echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
          echo "The run id is: $GITHUB_RUN_ID"
          echo "The GitHub Actor's  username is: $GITHUB_ACTOR"
          echo "GitHub SHA: $GITHUB_SHA"
      

  build:
    if: github.event_name == 'pull_request' && contains(fromJson('["opened", "synchronize"]'), github.event.action)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - uses: actions/cache@v3
        with:
          key: ${{ github.ref }}
          path: .cache
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: build docs
        run: mkdocs build

  test:
    if: github.event_name == 'pull_request' && contains(fromJson('["opened", "synchronize"]'), github.event.action)
    runs-on: ubuntu-22.04
    needs: [ build ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
          
  deploy:
    if: github.event_name == 'push' && github.ref_name == 'main'
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
      pages: write
    steps:
      - uses: actions/checkout@v3
